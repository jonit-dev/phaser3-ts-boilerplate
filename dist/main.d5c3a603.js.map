{"version":3,"sources":["src/CST.ts","src/scenes/LoadScene.ts","src/utils/ButtonHelper.ts","src/scenes/PlayScene.ts","src/scenes/MenuScene.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.d5c3a603.js","sourceRoot":"..","sourcesContent":["export const CST = {\n  SCENES: {\n    LOAD: \"LOAD\",\n    MENU: \"MENU\",\n    PLAY: \"PLAY\"\n  },\n  IMAGE: {\n    LOGO: \"logo.png\",\n    OPTIONS: \"options_button.png\",\n    PLAY: \"play_button.png\",\n    TITLE: \"title_bg.jpg\"\n  },\n  AUDIO: {\n    TITLE: \"shinvy-childhood.mp3\"\n  },\n  SPRITE: {\n    CAT: \"cat.png\"\n  }\n};\n","import { CST } from \"../CST\";\n// import { MenuScene } from \"./MenuScene\";\n\nexport class LoadScene extends Phaser.Scene {\n  constructor() {\n    super({\n      key: CST.SCENES.LOAD\n    });\n  }\n  //optional methods\n  init() {}\n\n  loadImages() {\n    this.load.setPath(\"./assets/image\");\n\n    for (let prop in CST.IMAGE) {\n      console.log(`trying to load ${CST.IMAGE[prop]}`);\n\n      this.load.image(CST.IMAGE[prop], CST.IMAGE[prop]);\n    }\n  }\n\n  loadAudio() {\n    this.load.setPath(\"./assets/audio\");\n    for (let prop in CST.AUDIO) {\n      this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\n    }\n  }\n\n  loadSprites(frameConfig?: Phaser.Loader.FileTypes.ImageFrameConfig) {\n    this.load.setPath(\"./assets/sprite\");\n    for (let prop in CST.SPRITE) {\n      this.load.spritesheet(CST.SPRITE[prop], CST.SPRITE[prop], frameConfig);\n    }\n  }\n\n  preload() {\n    // ASSET LOADING ========================================\n\n    //load out sprite atlas\n    // this.load.atlas(\n    //   \"characters-atlas\",\n    //   \"./assets/sprite/character-atlas.png\",\n    //   \"./assets/sprite/character-atlas_atlas.json\"\n    // );\n    this.load.atlas(\n      \"daze\",\n      \"./assets/sprite/daze.png\",\n      \"./assets/sprite/daze.json\"\n    );\n\n    // this.loadAudio();\n    this.loadSprites({\n      frameHeight: 32,\n      frameWidth: 32\n    });\n    this.loadImages();\n\n    //create loading bar\n\n    let loadingBar = this.add.graphics({\n      fillStyle: {\n        color: 0xffffff\n      }\n    });\n\n    /* Loader events\n      - complete - when done\n      progress - loader number progress in decimal\n    */\n\n    this.load.on(\"progress\", (percent: number) => {\n      console.log(\"loading assets...\");\n      console.log(percent);\n\n      const { height, width } = this.game.renderer; //get game screen size\n\n      loadingBar.fillRect(0, height / 2, width * percent, 50);\n    });\n\n    this.load.on(\"complete\", () => {\n      console.log(\"finished!\");\n    });\n  }\n\n  //required!\n  create() {\n    this.scene.start(CST.SCENES.MENU);\n    // this.scene.launch();\n\n    //we can also add the scene dynamically\n\n    // this.scene.add(CST.SCENES.MENU, MenuScene);\n    // this.scene.start(CST.SCENES.MENU, \"hello from loadscene\")\n  }\n}\n","const setButtonInteractivity = (\n  button: Phaser.GameObjects.Image,\n  hoverSprite: Phaser.GameObjects.Sprite\n) => {\n  button.setInteractive();\n\n  button.on(\"pointerover\", () => {\n    console.log(\"hovaaa\");\n    hoverSprite.setVisible(true);\n    hoverSprite.play(\"walk\");\n\n    //place it to the left of the button\n    hoverSprite.x = button.x - button.width;\n    hoverSprite.y = button.y;\n  });\n\n  button.on(\"pointerout\", () => {\n    console.log(\"OUTAAA HERE\");\n    hoverSprite.setVisible(false);\n  });\n};\n\nexport default { setButtonInteractivity };\n","import { CST } from \"../CST\";\n\nexport class PlayScene extends Phaser.Scene {\n  constructor() {\n    super({\n      key: CST.SCENES.PLAY\n    });\n  }\n  //optional methods\n  init() {\n    console.log(\"play scene!\");\n  }\n  preload() {}\n\n  //required!\n  create() {\n    //this.scene.start(CST.SCENES.MENU, \"hello from loadscene\");\n    //this.scene.launch();\n    this.add.sprite(100, 100, \"daze\", \"daze015.png\");\n  }\n}\n","import { CST } from \"../CST\";\n\nimport ButtonHelper from \"../utils/ButtonHelper\";\nimport { PlayScene } from \"./PlayScene\";\n\nexport class MenuScene extends Phaser.Scene {\n  constructor() {\n    super({\n      key: CST.SCENES.MENU\n    });\n  }\n  // init(data: String) {\n  //   console.log(data);\n  // }\n  create() {\n    const { width, height } = this.game.renderer;\n\n    //add image background\n    this.add\n      .image(0, 0, CST.IMAGE.TITLE)\n      .setOrigin(0, 0)\n      .setDepth(0);\n\n    // play our background music\n\n    // this.sound.pauseOnBlur = false; //keep playing even when switching tabs\n    // this.sound.play(\"title_music\", {\n    //   loop: true\n    // });\n\n    // logo\n    this.add\n      .image(width / 2, height * 0.2, CST.IMAGE.LOGO)\n      // .setScale(0.3)\n      .setDepth(1);\n\n    //play button\n    let playButton = this.add.image(width / 2, height / 2, CST.IMAGE.PLAY);\n\n    //options button\n    let optionsButton = this.add.image(\n      width / 2,\n      height / 2 + 100,\n      CST.IMAGE.OPTIONS\n    );\n\n    // CAT ========================================\n    let hoverSprite: Phaser.GameObjects.Sprite = this.add\n      .sprite(100, 100, CST.SPRITE.CAT)\n      .setScale(2);\n    hoverSprite.setVisible(false);\n\n    // add some animation to it =)\n    this.anims.create({\n      key: \"walk\",\n      frameRate: 4,\n      repeat: -1, //repeat forever,\n      frames: this.anims.generateFrameNumbers(CST.SPRITE.CAT, {\n        frames: [0, 1, 2, 3]\n      })\n    });\n\n    /*#############################################################|\n    |  >>> BUTTON CLICKS - INTERACTIVITY\n    *##############################################################*/\n\n    ButtonHelper.setButtonInteractivity(playButton, hoverSprite);\n    ButtonHelper.setButtonInteractivity(optionsButton, hoverSprite);\n\n    playButton.on(\"pointerup\", () => {\n      this.scene.start(CST.SCENES.PLAY, PlayScene);\n    });\n  }\n}\n","/** @type {import(\"../typings/phaser\")} */\n\nimport { LoadScene } from \"./scenes/LoadScene\";\nimport { MenuScene } from \"./scenes/MenuScene\";\nimport { PlayScene } from \"./scenes/PlayScene\";\n\nlet game = new Phaser.Game({\n  width: 800,\n  height: 600,\n  scene: [LoadScene, MenuScene, PlayScene],\n  render: {\n    pixelArt: true\n  }\n});\n"]}